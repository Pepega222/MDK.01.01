text = '''
Напишите программу, которая считывает текст из файла (в файле может быть 
больше одной строки) и выводит самое частое слово в этом тексте и через 
пробел то, сколько раз оно встретилось. Если таких слов несколько, вывести 
лексикографически первое (можно использовать оператор < для строк). 
В качестве ответа укажите вывод программы, а не саму программу. 
Слова, написанные в разных регистрах, считаются одинаковыми.

Использовать надо циклы, списки, словари. Не использовать lambda, 
регулярные выражения и доп.модули, и все что надо импортировать. 
В файле, который дается для обработки нет осмысленных слов, знаков и т.п. 
Там по сути наборы букв разделенные пробелами и в разном регистре, 
например: gtdFtd jy k dyygGTDHj kdH DJDJ.

У меня получился вот такой код. Вроде по логике должно работать. 
Но ответ не принимает как правильный. Помогите пожалуйста разобраться в чем моя ошибка.

Подскажите, для чего используется _ перед dict и list? 

`_word`, `_dict`, `_list` - это обычные имена переменных, 
такие как `my_word`, `my_dict`, `my_list`. 

Также вопрос почему длина слова от 4? - это просто шло вам бонусом, 
если вам не надо - убираю.
'''

lst_no = ['.', ',', ':', '!', '"', "'", '[', ']', '-', '—', '(', ')', '?', '_', '`'  ]   # и т.д.
lst = []

for word in text.lower().split():
    if not word in lst_no:
        _word = word 
        if word[-1] in lst_no:
            _word = _word[:-1]
        if word[0] in lst_no:
            _word = _word[1:] 
        lst.append(_word)

_dict = dict()
for word in lst:
    _dict[word] = _dict.get(word, 0) + 1

# сортируем словарь посредством формирования списка (значение, ключ)
_list = []
for key, value in _dict.items():
    _list.append((value, key))
    _list.sort(reverse=True)

# самое частое слово в этом тексте
print(f'самое частое слово в этом тексте -> `{_list[0][1]}`, использовалось `{_list[0][0]}` раз.')
